- name: download flannel
  delegate_to: localhost
  run_once: yes
  unarchive: 
    src: https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz
    dest: /tmp/provisioners/
    remote_src: yes
    creates: flannel-v0.11.0-linux-amd64.tar.gz

- name: install flannel 
  copy:
      src: "{{ item }}"
      dest: /opt/k8s/bin/{{ item }}
      mode: 0755
  with_items: 
    - flanneld
    - mk-docker-opts.sh

- name: generate cert
  run_once: true
  delegate_to: localhost
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json  -profile=kubernetes roles/k8s/files/flanneld-csr.json | cfssljson -bare flanneld 
  args:
    creates: flanneld-key.pem

- name: import information to etcd
  run_once: true
  delegate_to: group["all"][0]
  shell: >
    etcdctl 
    --endpoints=${ETCD_ENDPOINTS} 
    --ca-file=/opt/k8s/work/ca.pem
    --cert-file=/etc/flannel/certs/flanneld.pem 
    --key-file=/etc/flannel/certs/flanneld-key.pem 
    mk {{ FLANNEL_ETCD_PREFIX }}/config '{"Network":"'{{CLUSTER_CIDR}}'", "SubnetLen": 21, "Backend": {"Type": "vxlan"}}'
    && touch /etc/flannel/mark
  args:
      creates: /etc/flannel/mark
 
- name: create flanneld folder
  file:
      state: directory
      path: /etc/flanneld/certs

- name: copy certs
  copy:
      src: "{{ item }}"
      dest: /etc/flanneld/certs/{{ item }}
  with_items: 
    - flanneld.pem
    - flanneld-key.pem

- name: creates systemctl service file
  template:
    src: flanneld.service.j2
    dest: /etc/systemd/system/flanneld.service

- name: enable flanneld 
  systemd:
      name: flanneld
      enabled: yes
      state: started
